@using BornAgainWiki.Models.Items
@using Ronin.Model
@using Ronin.Model.Enums
@using Ronin.Model.GameActions
@model ItemsViewModel

<table class="table table-striped">
	<thead>
		<tr>
			<th scope="col">Sprite</th>
			<th scope="col">Name</th>
			<th scope="col">Stats</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Items)
		{
			var cycleActions = item.BasicCycle.SelectMany(x => x.Actions).Flatten();
			int minDamage = int.MaxValue, maxDamage = int.MinValue;
			var attacks = cycleActions.OfType<AttackGameAction>();
			float maxRange = 0;
			foreach (var attack in attacks)
			{
				var attackDescriptor = item.Attacks[attack.Index];
				if (attackDescriptor.MaxDamage == 0) continue;
				minDamage = Math.Min(minDamage, attackDescriptor.MinDamage);
				maxDamage = Math.Max(maxDamage, attackDescriptor.MaxDamage);

				var range = attackDescriptor.Speed * (attackDescriptor.Lifetime / 1000f);
				if (attackDescriptor.Time == TimeType.Boomerang) range *= 0.5f;
				range += attackDescriptor.Radius;
				maxRange = Math.Max(maxRange, range);
			}

			<tr style="height:80px;">
				<td class="align-middle">
					<a href="/@(ObjectLookup.GenerateKey(item.Name))" title="@item.Name">
						<img class="sprite-md align-middle" src="/tex/@(item.Textures.FirstOrDefault())" />
					</a>
				</td>
				<td class="align-middle"><a class="text-decoration-none" href="/@(ObjectLookup.GenerateKey(item.Name))"><b>@item.Name</b></a> <small class="ms-2">@item.Rarity</small></td>
				<td class="align-middle">
					@if (item.HasStatIncreases())
					{
						<div class="d-flex">
							@foreach (var (statType, increase, multiplier) in item.GetStatIncreases())
							{
								if (increase != 0)
								{
									<div class="me-4">
										<img class="sprite-sm" src="/img/stat/@(statType.ToString().ToLower()).png" />
										<b class="align-middle">@(increase > 0 ? "+" : "")@increase</b>
									</div>
								}

								if (multiplier != 0)
								{
									<div class="me-4">
										<img class="sprite-sm" src="/img/stat/@(statType.ToString().ToLower()).png" />
										<b class="align-middle">@(multiplier > 0 ? "+" : "")@multiplier%</b>
									</div>
								}
							}
						</div>
					}
				</td>
			</tr>
		}
	</tbody>
</table>